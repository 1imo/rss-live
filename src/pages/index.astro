---
import Layout from '../layouts/Layout.astro';
import ArticleCard from '../components/ArticleCard.astro';
import { newsService } from '../services/NewsService';
import { newsCategories } from '../config/newsCategories';

// Get articles for the homepage
const featuredArticles = await newsService.getFeaturedArticles();
const trendingByCategory = await newsService.getTrendingByCategory();

// Get the main headline (first featured article)
const mainHeadline = featuredArticles[0];
const secondaryHeadlines = featuredArticles.slice(1, 4);
const latestArticles = featuredArticles.slice(4);
---

<Layout
  title="NewsHub — Latest News from Around the World"
  description="Breaking news, politics, business, technology, science, sports and more. Stay informed with trusted journalism from leading sources worldwide."
>
  <!-- Breaking News Banner -->
  <section class="bg-red-600 text-white">
    <div class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-2">
      <div class="flex items-center justify-center space-x-4 text-sm font-medium">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-bold bg-red-700 text-white animate-pulse">
          <svg class="w-3 h-3 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
          </svg>
          BREAKING
        </span>
        <p class="truncate">Latest updates on global news as they happen</p>
      </div>
    </div>
  </section>

  <!-- Main Headlines Section -->
  <section class="bg-white dark:bg-times-950 border-b border-times-200 dark:border-times-800">
    <div class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:py-12">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 lg:gap-12">
        <!-- Main Headline -->
        <div class="lg:col-span-2">
          {mainHeadline && (
            <ArticleCard
              article={mainHeadline}
              featured={true}
              showImage={true}
              showDescription={false}
              className="mb-6"
            />
          )}
        </div>

        <!-- Secondary Headlines -->
        <div class="space-y-8">
          <div>
            <h2 class="text-xl font-display font-bold text-times-900 dark:text-white mb-6 pb-2 border-b border-times-200 dark:border-times-800">
              Top Stories
            </h2>
            <div class="space-y-6">
              {secondaryHeadlines.map((article) => (
                <article class="group">
                  <div class="flex space-x-4">
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center space-x-2 mb-2">
                        <span class={`inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium text-white ${article.sourceColor}`}>
                          <svg class="w-2.5 h-2.5 fill-white" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z" clip-rule="evenodd"></path>
                          </svg>
                        </span>
                        <span class="text-xs text-times-500 dark:text-times-400 font-medium">
                          {article.source}
                        </span>
                      </div>
                      <h3 class="text-base lg:text-lg font-display font-semibold text-times-900 dark:text-white leading-tight mb-2 line-clamp-3">
                        <a href={`/news/${article.slug}`} class="hover:text-times-700 dark:hover:text-times-300 transition-colors">
                          {article.title}
                        </a>
                      </h3>
                      <p class="text-sm text-times-600 dark:text-times-400 line-clamp-2">
                        {article.description}
                      </p>
                    </div>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Trending Now Section -->
  <section class="bg-times-50 dark:bg-times-950">
    <div class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="mb-8">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-display font-bold text-times-900 dark:text-white">
            Trending Now
          </h2>
          <a href="/categories" class="text-times-600 dark:text-times-400 hover:text-times-800 dark:hover:text-times-300 font-medium text-sm transition-colors">
            View All Sections →
          </a>
        </div>
        <div class="border-b border-times-200 dark:border-times-800 pb-2"></div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {Object.entries(trendingByCategory).slice(0, 4).map(([categoryId, articles]) => {
          const category = newsCategories.find(cat => cat.id === categoryId);
          const article = articles[0]; // Take the first article from each category

          return article ? (
            <article class="group">
              <div class="space-y-3">
                <div class="flex items-center space-x-2">
                  <div class={`w-8 h-8 rounded-full ${category?.color || 'bg-gray-600'} flex items-center justify-center text-white text-sm font-bold`}>
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z" clip-rule="evenodd"></path>
                    </svg>
                  </div>
                  <span class="text-sm font-semibold text-times-700 dark:text-times-300 uppercase tracking-wide">
                    {category?.name || categoryId}
                  </span>
                </div>

                <div class="space-y-2">
                  <h3 class="font-display font-semibold text-times-900 dark:text-white leading-tight line-clamp-2">
                    <a href={`/news/${article.slug}`} class="hover:text-times-700 dark:hover:text-times-300 transition-colors">
                      {article.title}
                    </a>
                  </h3>
                  <div class="flex items-center justify-between text-xs text-times-500 dark:text-times-400">
                    <span>{article.source}</span>
                    <time>
                      {new Date(article.pubDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}
                    </time>
                  </div>
                </div>
              </div>
            </article>
          ) : null;
        })}
      </div>
    </div>
  </section>

  <!-- Latest News Section -->
  <section class="bg-white dark:bg-times-950">
    <div class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="mb-8">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-3xl font-display font-bold text-times-900 dark:text-white">
            Latest News
          </h2>
          <div class="flex items-center space-x-4">
            <select id="category-filter" class="px-4 py-2 border border-times-300 dark:border-times-700 rounded-lg bg-white dark:bg-times-900 text-times-900 dark:text-white text-sm font-medium focus:ring-2 focus:ring-times-500 focus:border-transparent transition-colors min-w-fit w-auto">
              <option value="all" class="bg-white dark:bg-times-900 text-times-900 dark:text-white">All Categories</option>
              {newsCategories.map(category => (
                <option value={category.id} class="bg-white dark:bg-times-900 text-times-900 dark:text-white">
                  {category.name}
                </option>
              ))}
            </select>
          </div>
        </div>
        <div class="border-b border-times-200 dark:border-times-800 pb-2"></div>
      </div>

      <!-- Articles Grid -->
      <div id="articles-container" class="space-y-8">
        <!-- Loading State -->
        <div id="loading-spinner" class="hidden flex justify-center items-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-times-600"></div>
          <span class="ml-3 text-times-600 dark:text-times-400">Loading articles...</span>
        </div>

        <!-- Articles -->
        <div id="articles-grid" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
          {latestArticles.map((article) => (
            <div class="group">
              <ArticleCard
                article={article}
                showImage={true}
                showDescription={true}
              />
            </div>
          ))}
        </div>

        <!-- Load More Button -->
        <div class="text-center py-8">
          <button id="load-more-btn" class="px-8 py-3 bg-times-900 dark:bg-white text-white dark:text-times-900 font-semibold rounded-lg hover:bg-times-800 dark:hover:bg-times-100 transition-colors focus:outline-none focus:ring-2 focus:ring-times-500 focus:ring-offset-2">
            Load More Stories
          </button>
        </div>

        <!-- No Results -->
        <div id="no-results" class="hidden text-center py-12">
          <div class="text-times-400 dark:text-times-500">
            <svg class="w-12 h-12 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
            </svg>
            <p class="text-lg font-medium text-times-900 dark:text-white">No articles found</p>
            <p class="text-times-600 dark:text-times-400">Try selecting a different category</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Newsletter Section -->
  <section class="bg-times-950 text-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16 text-center">
      <h2 class="text-3xl lg:text-4xl font-display font-bold mb-6 text-times-900 dark:text-white">
        Stay Informed
      </h2>
      <p class="text-xl text-times-900 dark:text-white mb-8 max-w-2xl mx-auto">
        Get our daily briefing with the stories that matter, delivered straight to your inbox every morning.
      </p>
      <form class="max-w-lg mx-auto">
        <div class="flex flex-col sm:flex-row gap-3">
          <input
            type="email"
            name="email"
            placeholder="Enter your email address"
            class="flex-1 px-4 py-3 border border-times-700 bg-white text-times-900 placeholder-times-500 rounded-md focus:outline-none focus:ring-2 focus:ring-times-300 focus:border-times-300 transition-all"
            required
          />
          <button
            type="submit"
            class="px-6 py-3 bg-times-900 text-white font-semibold rounded-md hover:bg-times-800 focus:outline-none focus:ring-2 focus:ring-times-300 focus:ring-offset-2 focus:ring-offset-times-950 whitespace-nowrap transition-colors"
          >
            Subscribe
          </button>
        </div>
        <p class="text-sm text-times-400 mt-8">
          Free forever. No spam. Unsubscribe anytime.
        </p>
      </form>
    </div>
  </section>

  <!-- JavaScript for dynamic functionality -->
  <script>
    // DOM Elements
    const articlesGrid = document.getElementById('articles-grid');
    const loadMoreBtn = document.getElementById('load-more-btn');
    const loadingSpinner = document.getElementById('loading-spinner');
    const noResults = document.getElementById('no-results');
    const categoryFilter = document.getElementById('category-filter');

    let currentCategory = 'all';
    let currentPage = 1;
    let articlesPerPage = 6;
    let allArticleElements = [];

    // Get all article elements and store them
    function initializeArticles() {
      allArticleElements = Array.from(articlesGrid.children);
      filterArticles();
    }

    function filterArticles() {
      let visibleArticles = allArticleElements;
      
      // Filter by category if not 'all'
      if (currentCategory !== 'all') {
        visibleArticles = allArticleElements.filter(articleEl => {
          // Look for the category span (first span in the meta section)
          const categorySpan = articleEl.querySelector('span[class*="inline-flex"]');
          if (categorySpan) {
            const categoryText = categorySpan.textContent.trim().toLowerCase();
            return categoryText === currentCategory.toLowerCase() || categoryText === currentCategory.toUpperCase();
          }
          return false;
        });
      }

      // Hide all articles first
      allArticleElements.forEach(el => el.style.display = 'none');

      // Show filtered articles up to current page
      const endIndex = currentPage * articlesPerPage;
      const articlesToShow = visibleArticles.slice(0, endIndex);
      
      articlesToShow.forEach(el => el.style.display = 'block');

      // Show/hide no results
      if (visibleArticles.length === 0) {
        noResults.classList.remove('hidden');
      } else {
        noResults.classList.add('hidden');
      }

      // Show/hide load more button
      if (endIndex >= visibleArticles.length) {
        loadMoreBtn.classList.add('hidden');
      } else {
        loadMoreBtn.classList.remove('hidden');
      }
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', () => {
      initializeArticles();
    });

    // Category filter event listener
    categoryFilter?.addEventListener('change', (e) => {
      currentCategory = e.target.value;
      currentPage = 1;
      filterArticles();
    });

    // Load more button event listener
    loadMoreBtn?.addEventListener('click', () => {
      currentPage++;
      filterArticles();
    });

    // Newsletter form submission
    const newsletterForm = document.querySelector('form');
    newsletterForm?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(e.target);
      const email = formData.get('email');

      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ action: 'subscribe', email }),
        });

        const result = await response.json();

        if (result.success) {
          alert('Successfully subscribed to newsletter!');
          e.target.reset();
        } else {
          alert(result.message || 'Subscription failed');
        }
      } catch (error) {
        console.error('Newsletter subscription error:', error);
        alert('An error occurred. Please try again.');
      }
    });
  </script>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .group:hover img {
    transform: scale(1.05);
  }

  .group img {
    transition: transform 0.3s ease-in-out;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 6px;
  }

  ::-webkit-scrollbar-track {
    @apply bg-gray-100 dark:bg-neutral-700;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-gray-300 dark:bg-neutral-500 rounded-full;
  }

  ::-webkit-scrollbar-thumb:hover {
    @apply bg-gray-400 dark:bg-neutral-400;
  }
</style>
